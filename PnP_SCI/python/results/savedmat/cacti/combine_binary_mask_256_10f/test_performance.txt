# combine_binary_mask
* use optimal parametes for kobe

bm_256_10f:
---------
GAP-TV
		aerial	crash	drop	kobe	runner	traffic	[average]
psnr	22.33	21.88	24.82	24.09	25.71	18.61	22.9067
ssim	0.7504	0.7609	0.9046	0.7655	0.8556	0.5896	0.7711



---------
GAP-TV+FFDNET
		aerial	crash	drop	kobe	runner	traffic	[average]
psnr	22.87	23.14	28.96	25.24	26.97	19.28	24.41
ssim	0.7325	0.7144	0.9233	0.7528	0.8036	0.5858	0.7521




---------
GAP-TV+FASTDVDNET
		aerial	crash	drop	kobe	runner	traffic	[average]
psnr	25.55	25.83	36.03	27.32	32.10	21.77	28.10
ssim	0.8258	0.8607	0.9547	0.8583	0.9263	0.7492	0.8625





param log：
GAP-TV：
    projmeth = 'gap' # projection method
    _lambda = 1 # regularization factor, [original set]
    accelerate = True # enable accelerated version of GAP
    denoiser = 'tv' # total variation (TV)
    iter_max = 100 # maximum number of iterations
    tv_weight = 0.25 # TV denoising weight (larger for smoother but slower) [kobe:0.25; ]
    tv_iter_max = 5 # TV denoising maximum number of iterations each

GAP-TV+FASTDVDNET
    projmeth = 'gap' # projection method
    _lambda = 1 # regularization factor, [original set]
    accelerate = True # enable accelerated version of GAP
    denoiser = 'tv+fastdvdnet' # video non-local network 
    noise_estimate = False # disable noise estimation for GAP
    sigma1    = None # pre-set noise standard deviation for 1st period denoise 
    iter_max1 = 100 # maximum number of iterations for 1st period denoise   
    sigma2    = [100/255, 50/255, 25/255] # pre-set noise standard deviation for 2nd period denoise 
    iter_max2 = [80, 100, 150] # maximum number of iterations for 2nd period denoise    
    # sigma2    = [50/255, 25/255] # pre-set noise standard deviation for 2nd period denoise 
    # iter_max2 = [20, 20] # maximum number of iterations for 2nd period denoise   
    tv_iter_max = 5 # TV denoising maximum number of iterations each
    tv_weight = 0.25 # TV denoising weight (larger for smoother but slower) [kobe:0.25]